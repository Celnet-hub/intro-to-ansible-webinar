ansible.utils.ipaddr filter examples:
The var sean_subnet is: {{ sean_subnet }}

Jinja2: {% raw %} IP Address: {{sean_subnet | ansible.utils.ipaddr }} {% endraw %}
Renders: IP Address: {{ sean_subnet | ansible.utils.ipaddr }}

Jinja2: {% raw %} IP Address: {{sean_subnet | ansible.utils.ipaddr('netmask') }} {% endraw %}
Renders: IP Address: {{ sean_subnet | ansible.utils.ipaddr('netmask') }}

Jinja2: {% raw %} IPv4 Address: {{ sean_subnet | ansible.utils.ipv4 }} {% endraw %}
Renders: IPv4 Address: {{ sean_subnet | ansible.utils.ipv4 }}

Jinja2: {% raw %} IPv6 Address: {{ sean_subnet | ansible.utils.ipv4 }} {% endraw %}
Renders: IPv6 Address: {{ sean_subnet | ansible.utils.ipv4 }}

Jinja2: {% raw %} Network: {{ sean_subnet | ansible.utils.ipaddr('network') }} {% endraw %}
Renders: Network: {{ sean_subnet | ansible.utils.ipaddr('network') }}

Jinja2: {% raw %} Prefix: {{ sean_subnet | ansible.utils.ipaddr('prefix') }} {% endraw %}
Renders: Prefix: {{ sean_subnet | ansible.utils.ipaddr('prefix') }}

Jinja2: {% raw %} What is the first usable IP on {{sean_subnet}}? {{ sean_subnet | ansible.utils.ipaddr('next_usable') }} {% endraw %}
Renders: What is the first usable IP on {{sean_subnet}}? {{ sean_subnet | ansible.utils.ipaddr('next_usable') }}

Jinja2: {% raw %} What is the range of usable IP address on {{sean_subnet}}? {{ sean_subnet | ansible.utils.ipaddr('range_usable') }} {% endraw %}
Renders:  What is the range of usable IP address on {{sean_subnet}}? {{ sean_subnet | ansible.utils.ipaddr('range_usable') }}

Jinja2: {% raw %} What is the last usable IP address on {{sean_subnet}}? {{ sean_subnet | ansible.utils.ipaddr('last_usable') }} {% endraw %}
Renders: What is the last usable IP address on {{sean_subnet}}? {{ sean_subnet | ansible.utils.ipaddr('last_usable') }}

Jinja2: {% raw %} What is the 2nd usable address on {{sean_subnet}}? {{ sean_subnet | ansible.utils.next_nth_usable(2) }} {% endraw %}
Renders: What is the 2nd usable address on {{sean_subnet}}? {{ sean_subnet | ansible.utils.next_nth_usable(2) }}
--------
Loop method for providing  multiple IP addresses for use:

Jinja: {% raw %}
{% for n in range(10) %}
  {{ sean_subnet | ansible.utils.next_nth_usable(n) }}
{% endfor %} {% endraw %}

Renders:
{% for n in range(10) %}
  {{ sean_subnet | ansible.utils.next_nth_usable(n) }}
{% endfor %}